AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: AlexaSkill with ChatGPT

Globals:
  Function:
    Tags:
      Project: Alexa-ChatGPT
    Timeout: 300
    Environment:
      Variables:
        RESPONSES_QUEUE_URI: !Ref ResponsesQueue
        REQUESTS_QUEUE_URI: !Ref RequestsQueue
        OPENAI_API_KEY: !Ref OpenAIApiKey
        GEMINI_API_KEY: !Ref GeminiApiKey
        POLL_DELAY: 7
        CLOUDFLARE_ACCOUNT_ID: !Ref CloudFlareAccountId
        CLOUDFLARE_API_KEY: !Ref CloudFlareAPIKey
        S3_BUCKET: !Ref Bucket
        OPENAI_BASE_URL: "https://api.openai.com/v1"
        ANTHROPIC_API_KEY: !Ref AnthropicAPIKey
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:901920570463:layer:aws-otel-collector-arm64-ver-0-115-0:3
    Tracing: Active
Parameters:
  OpenAIApiKey:
    Type: String
    Description: OpenAI API Key
    Default: ""

  GeminiApiKey:
    Type: String
    Description: Google Service Account JSON B64
    Default: ""

  CloudFlareAccountId:
    Type: String
    Description: Cloudflare Account Id
    Default: ""

  CloudFlareAPIKey:
    Type: String
    Description: Cloudflare API key
    Default: ""

  AnthropicAPIKey:
    Type: String
    Description: Anthropic API Key
    Default: ""

  Runtime:
    Type: String
    Default: go1.x

  Architecture:
    Type: String
    Default: "x86_64"

  Handler:
    Type: String
    Default: main

Resources:

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-contents
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "http://ask-ifr-download.s3.amazonaws.com"
              - "https://ask-ifr-download.s3.amazonaws.com"
  RequestsQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Sub ${AWS::StackName}-Requests
      RedrivePolicy:
        maxReceiveCount: 5
        deadLetterTargetArn: !GetAtt RequestsDLQ.Arn
      VisibilityTimeout: 301

  RequestsDLQ:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Sub ${AWS::StackName}-Requests-DLQ

  ResponsesQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Sub ${AWS::StackName}-Responses
      VisibilityTimeout: 301

  ChatGPTFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: !Ref Runtime
      Handler: !Ref Handler
      Architectures:
        - !Ref Architecture
      FunctionName: chatGPT
      CodeUri: ./cmd/alexa
      Events:
        AlexaSkillEvent:
          Type: AlexaSkill
      Policies:
        - AWSXrayWriteOnlyAccess
        - SQSPollerPolicy:
            QueueName:
              !GetAtt ResponsesQueue.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt RequestsQueue.QueueName
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:PurgeQueue
              Resource:
                - !GetAtt RequestsQueue.Arn
                - !GetAtt ResponsesQueue.Arn
    Metadata:
      BuildMethod: go1.x

  ChatGPTRequests:
    Type: AWS::Serverless::Function
    Properties:
      ReservedConcurrentExecutions: 1
      Runtime: !Ref Runtime
      Handler: !Ref Handler
      Architectures:
        - !Ref Architecture
      FunctionName: chatGPTRequests
      CodeUri: ./cmd/sqs
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt RequestsQueue.Arn
            BatchSize: 1
      Policies:
        - AWSXrayWriteOnlyAccess
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt ResponsesQueue.QueueName
        - S3CrudPolicy:
            BucketName: !Ref Bucket
    Metadata:
      BuildMethod: go1.x

Outputs:
  ChatGPTLambdaArn:
    Description: "chatGPT alexa skill lambda ARN"
    Value: !GetAtt ChatGPTFunction.Arn

  ChatGPTRequestsArn:
    Description: "chatGPT requests handling lambda ARN"
    Value: !GetAtt ChatGPTRequests.Arn

  RequestsQueue:
    Description: "chatGPT prompt requests queue"
    Value: !GetAtt RequestsQueue.Arn

  RequestsDLQ:
    Description: "chatGPT prompt requests dead letter queue"
    Value: !GetAtt RequestsDLQ.Arn

  ResponsesQueue:
    Description: "chatGPT responses queue"
    Value: !GetAtt ResponsesQueue.Arn
